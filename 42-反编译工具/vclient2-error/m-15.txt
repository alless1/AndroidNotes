Landroidx/core/graphics/TypefaceCompatApi26Impl;.createFromFontInfo(Landroid/content/Context;Landroid/os/CancellationSignal;[Landroidx/core/provider/FontsContractCompat$FontInfo;I)Landroid/graphics/Typeface;
java.lang.RuntimeException: can not merge I and Z
	at com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:659)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.e2expr(TypeTransformer.java:629)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:716)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)
	at com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)
	at com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)
	at com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)
	at com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)
	at com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)
	at com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)
	at com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)
	at com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)
	at com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)
	at com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)
	at com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)
	at com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)
	at com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)


.method public createFromFontInfo(Landroid/content/Context;Landroid/os/CancellationSignal;[Landroidx/core/provider/FontsContractCompat$FontInfo;I)Landroid/graphics/Typeface;
    .parameter
    .parameter
    .parameter
    .parameter
    .catch Ljava/io/IOException; { :L1 .. :L2 } :L10
    .catchall { :L3 .. :L4 } :L7
    .catch Ljava/io/IOException; { :L5 .. :L6 } :L10
    .catchall { :L8 .. :L9 } :L9
    .catch Ljava/io/IOException; { :L9 .. :L10 } :L10
    .registers 15
    array-length v0, p3
    const/4 v1, 1
    const/4 v2, 0
    if-ge v0, v1, :L0
    return-object v2
    :L0
    invoke-direct { p0 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->isFontFamilyPrivateAPIAvailable()Z
    move-result v0
    if-nez v0, :L11
    invoke-virtual { p0, p3, p4 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->findBestInfo([Landroidx/core/provider/FontsContractCompat$FontInfo;I)Landroidx/core/provider/FontsContractCompat$FontInfo;
    move-result-object p3
    invoke-virtual { p1 }, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
    move-result-object p1
    :L1
    invoke-virtual { p3 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->getUri()Landroid/net/Uri;
    move-result-object p4
    const-string v0, "r"
    invoke-virtual { p1, p4, v0, p2 }, Landroid/content/ContentResolver;->openFileDescriptor(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;
    move-result-object p1
    if-nez p1, :L3
    if-eqz p1, :L2
    invoke-virtual { p1 }, Landroid/os/ParcelFileDescriptor;->close()V
    :L2
    return-object v2
    :L3
    new-instance p2, Landroid/graphics/Typeface$Builder;
    invoke-virtual { p1 }, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
    move-result-object p4
    invoke-direct { p2, p4 }, Landroid/graphics/Typeface$Builder;-><init>(Ljava/io/FileDescriptor;)V
    invoke-virtual { p3 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->getWeight()I
    move-result p4
    invoke-virtual { p2, p4 }, Landroid/graphics/Typeface$Builder;->setWeight(I)Landroid/graphics/Typeface$Builder;
    move-result-object p2
    invoke-virtual { p3 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->isItalic()Z
    move-result p3
    invoke-virtual { p2, p3 }, Landroid/graphics/Typeface$Builder;->setItalic(Z)Landroid/graphics/Typeface$Builder;
    move-result-object p2
    invoke-virtual { p2 }, Landroid/graphics/Typeface$Builder;->build()Landroid/graphics/Typeface;
    move-result-object p2
    :L4
    if-eqz p1, :L6
    :L5
    invoke-virtual { p1 }, Landroid/os/ParcelFileDescriptor;->close()V
    :L6
    return-object p2
    :L7
    move-exception p2
    if-eqz p1, :L9
    :L8
    invoke-virtual { p1 }, Landroid/os/ParcelFileDescriptor;->close()V
    :L9
    throw p2
    :L10
    return-object v2
    :L11
    invoke-static { p1, p3, p2 }, Landroidx/core/provider/FontsContractCompat;->prepareFontData(Landroid/content/Context;[Landroidx/core/provider/FontsContractCompat$FontInfo;Landroid/os/CancellationSignal;)Ljava/util/Map;
    move-result-object p1
    invoke-direct { p0 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->newFamily()Ljava/lang/Object;
    move-result-object p2
    if-nez p2, :L12
    return-object v2
    :L12
    array-length v0, p3
    const/4 v3, 0
    const/4 v9, 0
    :L13
    if-ge v9, v0, :L17
    aget-object v4, p3, v9
    invoke-virtual { v4 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->getUri()Landroid/net/Uri;
    move-result-object v5
    invoke-interface { p1, v5 }, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;
    move-result-object v5
    check-cast v5, Ljava/nio/ByteBuffer;
    if-nez v5, :L14
    goto :L16
    :L14
    invoke-virtual { v4 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->getTtcIndex()I
    move-result v6
    invoke-virtual { v4 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->getWeight()I
    move-result v7
    invoke-virtual { v4 }, Landroidx/core/provider/FontsContractCompat$FontInfo;->isItalic()Z
    move-result v8
    move-object v3, p0
    move-object v4, p2
    invoke-direct/range { v3 .. v8 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->addFontFromBuffer(Ljava/lang/Object;Ljava/nio/ByteBuffer;III)Z
    move-result v3
    if-nez v3, :L15
    invoke-direct { p0, p2 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->abortCreation(Ljava/lang/Object;)V
    return-object v2
    :L15
    const/4 v3, 1
    :L16
    add-int/lit8 v9, v9, 1
    goto :L13
    :L17
    if-nez v3, :L18
    invoke-direct { p0, p2 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->abortCreation(Ljava/lang/Object;)V
    return-object v2
    :L18
    invoke-direct { p0, p2 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->freeze(Ljava/lang/Object;)Z
    move-result p1
    if-nez p1, :L19
    return-object v2
    :L19
    invoke-virtual { p0, p2 }, Landroidx/core/graphics/TypefaceCompatApi26Impl;->createFromFamiliesWithDefault(Ljava/lang/Object;)Landroid/graphics/Typeface;
    move-result-object p1
    if-nez p1, :L20
    return-object v2
    :L20
    invoke-static { p1, p4 }, Landroid/graphics/Typeface;->create(Landroid/graphics/Typeface;I)Landroid/graphics/Typeface;
    move-result-object p1
    return-object p1
.end method
