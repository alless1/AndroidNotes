思路：从栈和静态存储区开始遍历所有引用，都是“有用”的对象，其他的对象就可以别回收了。
主要的两种方式：
1.停止-复制
先暂停程序的运行，然后将所有存活的对象从当前堆复制到另一个堆，没有被复制的都是垃圾。
可以保持新堆的排列紧凑，但开销大，会需要额外的堆内存。
2.标记-清扫
遍历引用，找到存活的对象，给对象设置标记。标记工作结束以后，没有被标记的对象会被清理。
会产生磁盘碎片，但开销小。

系统会自动在这两种方式之间自动切换。
垃圾回收发生时，程序会被暂停，垃圾回收是低优先级的后台进程。

对于复制对象的优化：
内存分配以比较大的“块”为单位，如果对象较大，它会占用单独的块，有了块以后，可以往废弃的块里拷贝对象了（就不需要额外的新的堆内存了），只有一些小的对象会被复制整理。

垃圾回收总结，从栈和静态存储区开始查找对象引用，对象引用又引用其他对象，这样遍历查找结束以后，没有找到的剩下的对象就是垃圾对象。如果垃圾对象不多，就直接将垃圾对象清除。如果垃圾对象比较多，就将存活的对象统一复制到新的堆存储区，紧凑排列。